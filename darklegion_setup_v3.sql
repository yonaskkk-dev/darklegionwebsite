-- Dark Legion Web Portal - Veritabanƒ± Kurulum Dosyasƒ± v3
-- Bu SQL dosyasƒ±, Dark Legion Web Portal i√ßin gerekli t√ºm veritabanƒ± yapƒ±sƒ±nƒ± olu≈üturur.
-- T√ºm mod√ºller i√ßin gerekli tablolar dahildir (Temel sistem, Profil, Anƒ±lar, Oyunlar).

-- Veritabanƒ±nƒ± olu≈ütur
CREATE DATABASE IF NOT EXISTS `darklegion` DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci;
USE `darklegion`;

-- Kullanƒ±cƒ±lar tablosu
CREATE TABLE IF NOT EXISTS `users` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `username` varchar(50) NOT NULL,
  `email` varchar(100) NOT NULL,
  `password_hash` varchar(255) NOT NULL,
  `role` enum('admin','uye','misafir') NOT NULL DEFAULT 'misafir',
  `ai_access` tinyint(1) NOT NULL DEFAULT 0,
  `profile_url` varchar(50) DEFAULT NULL UNIQUE,
  `avatar` varchar(255) DEFAULT NULL,
  `cover_image` varchar(255) DEFAULT NULL,
  `cover_video` varchar(255) DEFAULT NULL,
  `background_music` varchar(255) DEFAULT NULL,
  `bio` text DEFAULT NULL,
  `interests` text DEFAULT NULL,
  `location` varchar(100) DEFAULT NULL,
  `social_links` text DEFAULT NULL,
  `badges` text DEFAULT NULL,
  `profile_views` int(11) DEFAULT 0,
  `created_at` timestamp NOT NULL DEFAULT current_timestamp(),
  `updated_at` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),
  PRIMARY KEY (`id`),
  UNIQUE KEY `username` (`username`),
  UNIQUE KEY `email` (`email`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- Dosya y√ºklemeleri tablosu
CREATE TABLE IF NOT EXISTS `uploads` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `user_id` int(11) NOT NULL,
  `filename` varchar(255) NOT NULL,
  `file_url` varchar(255) NOT NULL,
  `uploaded_at` timestamp NOT NULL DEFAULT current_timestamp(),
  PRIMARY KEY (`id`),
  KEY `user_id` (`user_id`),
  CONSTRAINT `uploads_ibfk_1` FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- AI sohbet loglarƒ± tablosu
CREATE TABLE IF NOT EXISTS `ai_logs` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `user_id` int(11) NOT NULL,
  `question` text NOT NULL,
  `answer` text NOT NULL,
  `created_at` timestamp NOT NULL DEFAULT current_timestamp(),
  PRIMARY KEY (`id`),
  KEY `user_id` (`user_id`),
  CONSTRAINT `ai_logs_ibfk_1` FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- Anƒ±lar tablosu
CREATE TABLE IF NOT EXISTS `memories` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `user_id` int(11) NOT NULL,
  `title` varchar(255) NOT NULL,
  `description` text DEFAULT NULL,
  `location` varchar(255) DEFAULT NULL,
  `date` date DEFAULT NULL,
  `memory_type` enum('image','video') NOT NULL,
  `file_name` varchar(255) NOT NULL,
  `file_path` varchar(255) NOT NULL,
  `likes` int(11) NOT NULL DEFAULT 0,
  `liked_by` text DEFAULT NULL,
  `comments` text DEFAULT NULL,
  `created_at` timestamp NOT NULL DEFAULT current_timestamp(),
  PRIMARY KEY (`id`),
  KEY `user_id` (`user_id`),
  CONSTRAINT `memories_ibfk_1` FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- Etkinlikler tablosu
CREATE TABLE IF NOT EXISTS `events` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `user_id` int(11) NOT NULL,
  `title` varchar(255) NOT NULL,
  `description` text DEFAULT NULL,
  `date` date NOT NULL,
  `time` time DEFAULT NULL,
  `created_at` timestamp NOT NULL DEFAULT current_timestamp(),
  PRIMARY KEY (`id`),
  KEY `user_id` (`user_id`),
  CONSTRAINT `events_ibfk_1` FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- Duyurular tablosu
CREATE TABLE IF NOT EXISTS `announcements` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(255) NOT NULL,
  `content` text NOT NULL,
  `is_pinned` tinyint(1) NOT NULL DEFAULT 0,
  `created_at` timestamp NOT NULL DEFAULT current_timestamp(),
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- Baƒülantƒ±lar tablosu
CREATE TABLE IF NOT EXISTS `links` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(255) NOT NULL,
  `url` varchar(255) NOT NULL,
  `icon` varchar(50) DEFAULT NULL,
  `created_at` timestamp NOT NULL DEFAULT current_timestamp(),
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- Oyunlar tablosu (yeni)
CREATE TABLE IF NOT EXISTS `games` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(100) NOT NULL,
  `slug` varchar(100) NOT NULL UNIQUE,
  `description` text NOT NULL,
  `thumbnail` varchar(255) NOT NULL,
  `is_multiplayer` tinyint(1) NOT NULL DEFAULT 0,
  `status` enum('active', 'inactive', 'coming_soon') NOT NULL DEFAULT 'active',
  `created_at` timestamp NOT NULL DEFAULT current_timestamp(),
  PRIMARY KEY (`id`),
  UNIQUE KEY `slug` (`slug`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- Oyun skorlarƒ± tablosu (yeni)
CREATE TABLE IF NOT EXISTS `game_scores` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `game_id` int(11) NOT NULL,
  `user_id` int(11) NOT NULL,
  `score` int(11) NOT NULL,
  `level` int(11) DEFAULT 1,
  `time_played` int(11) DEFAULT 0,
  `play_count` int(11) DEFAULT 1,
  `created_at` timestamp NOT NULL DEFAULT current_timestamp(),
  PRIMARY KEY (`id`),
  KEY `game_id` (`game_id`),
  KEY `user_id` (`user_id`),
  CONSTRAINT `game_scores_ibfk_1` FOREIGN KEY (`game_id`) REFERENCES `games` (`id`) ON DELETE CASCADE,
  CONSTRAINT `game_scores_ibfk_2` FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- Oyun rozetleri tablosu (yeni)
CREATE TABLE IF NOT EXISTS `game_badges` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `game_id` int(11) NOT NULL,
  `name` varchar(100) NOT NULL,
  `description` text NOT NULL,
  `icon` varchar(255) NOT NULL,
  `requirement` varchar(255) NOT NULL,
  `requirement_value` int(11) NOT NULL,
  `created_at` timestamp NOT NULL DEFAULT current_timestamp(),
  PRIMARY KEY (`id`),
  KEY `game_id` (`game_id`),
  CONSTRAINT `game_badges_ibfk_1` FOREIGN KEY (`game_id`) REFERENCES `games` (`id`) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- Kullanƒ±cƒ± rozetleri tablosu (yeni)
CREATE TABLE IF NOT EXISTS `user_game_badges` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `user_id` int(11) NOT NULL,
  `badge_id` int(11) NOT NULL,
  `achieved_at` timestamp NOT NULL DEFAULT current_timestamp(),
  PRIMARY KEY (`id`),
  UNIQUE KEY `user_badge` (`user_id`, `badge_id`),
  KEY `user_id` (`user_id`),
  KEY `badge_id` (`badge_id`),
  CONSTRAINT `user_game_badges_ibfk_1` FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE CASCADE,
  CONSTRAINT `user_game_badges_ibfk_2` FOREIGN KEY (`badge_id`) REFERENCES `game_badges` (`id`) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- √ñrnek admin kullanƒ±cƒ±sƒ± ekle (≈üifre: admin123)
-- NOT: G√ºvenlik i√ßin bu ≈üifreyi deƒüi≈ütirmeyi unutmayƒ±n!
INSERT INTO `users` (`username`, `email`, `password_hash`, `role`, `ai_access`, `profile_url`, `created_at`) VALUES
('admin', 'admin@example.com', '$2y$10$fCOFiMnqKYykVpNfrSkOYOv8Gt9zXRJe8Qx5iLy1tPLPLtqUbOrpW', 'admin', 1, 'admin', NOW());

-- √ñrnek normal kullanƒ±cƒ± ekle (≈üifre: user123)
INSERT INTO `users` (`username`, `email`, `password_hash`, `role`, `ai_access`, `profile_url`, `created_at`) VALUES
('kullanici', 'kullanici@example.com', '$2y$10$4LYA8jGGv5M7Qt5TU/K9WuIUkvZ1bSrw1KsEGSE1lAqIjbcmBPXha', 'uye', 0, 'kullanici', NOW());

-- √ñrnek oyunlarƒ± ekle
INSERT INTO `games` (`name`, `slug`, `description`, `thumbnail`, `is_multiplayer`, `status`) VALUES
('Yƒ±lan Oyunu', 'snake', 'Klasik yƒ±lan oyunu. Yƒ±lanƒ± y√∂nlendirerek elmalarƒ± topla, duvarlara ve kendine √ßarpmamaya dikkat et!', 'games/assets/snake_thumb.png', 0, 'active'),
('Tetris', 'tetris', 'D√º≈üen bloklarƒ± d√ºzenleyerek tam satƒ±rlar olu≈ütur ve puan kazan.', 'games/assets/tetris_thumb.png', 0, 'coming_soon'),
('Hafƒ±za Oyunu', 'memory', 'E≈üle≈üen kartlarƒ± bul. Hafƒ±zanƒ± test et ve en y√ºksek puanƒ± elde et!', 'games/assets/memory_thumb.png', 0, 'active'),
('XOX', 'tictactoe', 'ƒ∞ki ki≈üilik XOX oyunu. Arkada≈üƒ±nla oyna ve kazanmak i√ßin stratejik hamlelerde bulun.', 'games/assets/tictactoe_thumb.png', 1, 'active');

-- Yƒ±lan oyunu i√ßin rozet √∂rnekleri
SET @snake_game_id = (SELECT id FROM games WHERE slug = 'snake' LIMIT 1);

INSERT INTO `game_badges` (`game_id`, `name`, `description`, `icon`, `requirement`, `requirement_value`) VALUES
(@snake_game_id, '√áƒ±rak Yƒ±lancƒ±', 'ƒ∞lk oyununu oyna', 'üêç', 'play_count', 1),
(@snake_game_id, 'Yƒ±lan Avcƒ±sƒ±', '500 puan √ºzerinde skor yap', 'üèÜ', 'min_score', 500),
(@snake_game_id, 'Yƒ±lan Efendisi', '1000 puan √ºzerinde skor yap', 'üëë', 'min_score', 1000);

-- JSON Dosya yapƒ±larƒ± hakkƒ±nda bilgi
-- NOT: A≈üaƒüƒ±daki dosyalar veritabanƒ±nda deƒüil, dosya sisteminde saklanƒ±r:
-- 
-- 1. data/events.json - Etkinlik takvimi verileri (veritabanƒ± alternatifi)
-- 2. data/announcements.json - Duyurular (veritabanƒ± alternatifi)
-- 3. data/links.json - Baƒülantƒ±lar (veritabanƒ± alternatifi)
-- 4. data/memories.json - Anƒ±lar (veritabanƒ± alternatifi)
--
-- Bu JSON dosyalarƒ± a≈üaƒüƒ±daki formatta bo≈ü bir dizi ile ba≈ülamalƒ±dƒ±r:
-- []
--
-- Ayrƒ±ca a≈üaƒüƒ±daki dizinler olu≈üturulmalƒ±dƒ±r:
-- uploads/             - Genel dosya y√ºklemeleri i√ßin
-- uploads/gallery/     - Galeri resimleri i√ßin
-- uploads/memories/    - Anƒ±lar (fotoƒüraf ve videolar) i√ßin
-- uploads/profiles/    - Profil resimleri, kapak g√∂rselleri ve m√ºzikler i√ßin
-- games/               - Oyun dosyalarƒ± i√ßin
-- games/assets/        - Oyun g√∂rselleri i√ßin
-- games/js/            - Oyun JavaScript dosyalarƒ± i√ßin

-- Kurulum tamamlandƒ±